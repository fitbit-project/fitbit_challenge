version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=fitbit
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      # This line copies our init script into the container's init directory
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  ingestion:
    build: ./ingestion
    container_name: ingestion_service
    depends_on:
      - timescaledb
    # volumes:
    #   - ./synthetic_fitbit_data.json:/app/synthetic_fitbit_data.json
    volumes:
      # This new volume persists our state file
      - ./ingestion/state:/app/state
      - ./impute.py:/app/impute.py
    environment:
      - DATABASE_URL=postgresql://user:password@timescaledb:5432/fitbit

  backend:
    build: ./backend
    container_name: backend_service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@timescaledb:5432/fitbit
    depends_on:
      - timescaledb

  frontend:
    build: ./frontend
    container_name: frontend_service
    ports:
      - "3000:80"
    depends_on:
      - backend

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/rules.yml:/etc/prometheus/rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - backend
      - cadvisor
      - node-exporter

  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    pid: host
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
  
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'

  grafana:
    image: grafana/grafana:9.5.3
    container_name: grafana
    ports:
      - "3001:3000" # Use port 3001 to avoid conflict with our frontend
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
  
  pushgateway:
    image: prom/pushgateway:v1.6.0
    container_name: pushgateway
    ports:
      - "9091:9091"
    restart: unless-stopped

volumes:
  timescaledb_data:
  prometheus_data:
  grafana_data: